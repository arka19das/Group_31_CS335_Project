
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ADD_ASSIGN AND_ASSIGN AUTO BITWISE_AND BITWISE_NOT BITWISE_OR BITWISE_XOR BOOL BREAK CASE CHAR CHAR_CONSTANT CLASS COLON COMMA CONST CONTINUE DEC_OP DEFAULT DIVIDE DIV_ASSIGN DO DOT DOUBLE ELSE EQ EQ_OP FLOAT FLOAT_CONSTANT FOR GE_OP GOTO GREATER HEX_CONSTANT IDENTIFIER IF INC_OP INHERITANCE_OP INT INT_CONSTANT LEFT_ASSIGN LEFT_BRACKET LEFT_CURLY_BRACKET LEFT_OP LEFT_THIRD_BRACKET LESS LE_OP LOGICAL_AND_OP LOGICAL_NOT LOGICAL_OR_OP LONG MINUS MOD MOD_ASSIGN MULTIPLY MUL_ASSIGN NE_OP OCT_CONSTANT OR_ASSIGN PLUS PRIVATE PROTECTED PTR_OP PUBLIC QUESTION RETURN RIGHT_ASSIGN RIGHT_BRACKET RIGHT_CURLY_BRACKET RIGHT_OP RIGHT_THIRD_BRACKET SEMICOLON SHORT SIGNED SIZEOF STRING_LITERAL STRUCT SUB_ASSIGN SWITCH TYPEDEF TYPE_NAME UNSIGNED VOID WHILE XOR_ASSIGNstart : translation_unitprimary_expression : IDENTIFIER\n    | FLOAT_CONSTANT\n    | HEX_CONSTANT\n    | OCT_CONSTANT\n    | INT_CONSTANT\n    | CHAR_CONSTANT\n    | STRING_LITERAL\n    | LEFT_BRACKET expression RIGHT_BRACKETpostfix_expression : primary_expression\n    | postfix_expression LEFT_THIRD_BRACKET expression RIGHT_THIRD_BRACKET\n    | postfix_expression LEFT_BRACKET RIGHT_BRACKET\n    | postfix_expression LEFT_BRACKET argument_expression_list RIGHT_BRACKET\n    | postfix_expression DOT IDENTIFIER\n    | postfix_expression PTR_OP IDENTIFIER\n    | postfix_expression INC_OP\n    | postfix_expression DEC_OPargument_expression_list : assignment_expression\n    | argument_expression_list COMMA assignment_expressionunary_expression : postfix_expression\n    | INC_OP unary_expression\n    | DEC_OP unary_expression\n    | unary_operator cast_expression\n    | SIZEOF unary_expression\n    | SIZEOF LEFT_BRACKET type_name RIGHT_BRACKETunary_operator : BITWISE_AND\n    | MULTIPLY\n    | PLUS\n    | MINUS\n    | BITWISE_NOT\n    | LOGICAL_NOTcast_expression : unary_expression\n    | '(' type_name ')' cast_expression\n    multiplicative_expression : cast_expression\n    | multiplicative_expression MULTIPLY cast_expression\n    | multiplicative_expression DIVIDE cast_expression\n    | multiplicative_expression MOD cast_expression\n    additive_expression : multiplicative_expression\n    | additive_expression PLUS multiplicative_expression\n    | additive_expression MINUS multiplicative_expression\n    shift_expression : additive_expression\n    | shift_expression LEFT_OP additive_expression\n    | shift_expression RIGHT_OP additive_expression\n    relational_expression : shift_expression\n    | relational_expression LESS shift_expression\n    | relational_expression GREATER shift_expression\n    | relational_expression LE_OP shift_expression\n    | relational_expression GE_OP shift_expression\n    equality_expression : relational_expression\n    | equality_expression EQ_OP relational_expression\n    | equality_expression NE_OP relational_expression\n    and_expression : equality_expression\n    | and_expression BITWISE_AND equality_expression\n    exclusive_or_expression : and_expression\n    | exclusive_or_expression BITWISE_XOR and_expression\n    inclusive_or_expression : exclusive_or_expression\n    | inclusive_or_expression BITWISE_OR exclusive_or_expression\n    logical_and_expression : inclusive_or_expression\n    | logical_and_expression LOGICAL_AND_OP inclusive_or_expression\n    logical_or_expression : logical_and_expression\n    | logical_or_expression LOGICAL_OR_OP logical_and_expression\n    conditional_expression : logical_or_expression\n    | logical_or_expression QUESTION expression COLON conditional_expressionassignment_expression : conditional_expression\n    | unary_expression assignment_operator assignment_expression\n    assignment_operator : EQ\n    | MUL_ASSIGN\n    | DIV_ASSIGN\n    | MOD_ASSIGN\n    | ADD_ASSIGN\n    | SUB_ASSIGN\n    | LEFT_ASSIGN\n    | RIGHT_ASSIGN\n    | AND_ASSIGN\n    | XOR_ASSIGN\n    | OR_ASSIGN\n    expression : assignment_expression\n    | expression COMMA assignment_expressionconstant_expression : conditional_expressiondeclaration : declaration_specifiers SEMICOLON\n    | declaration_specifiers init_declarator_list SEMICOLON\n    declaration_specifiers : storage_class_specifier declaration_specifiers\n    | storage_class_specifier\n    | type_specifier declaration_specifiers\n    | type_specifier\n    | type_qualifier declaration_specifiers\n    | type_qualifier\n    init_declarator_list : init_declarator\n    | init_declarator_list COMMA init_declaratorinit_declarator : declarator\n    | declarator EQ initializerstorage_class_specifier : TYPEDEF\n    | AUTOtype_specifier : VOID\n    | CHAR\n    | SHORT\n    | INT\n    | LONG\n    | FLOAT\n    | DOUBLE\n    | SIGNED\n    | UNSIGNED\n    | BOOL\n    | struct_specifier\n    | class_definition\n    | TYPE_NAME\n    struct_specifier : STRUCT IDENTIFIER LEFT_CURLY_BRACKET struct_declaration_list RIGHT_CURLY_BRACKET\n    | STRUCT LEFT_CURLY_BRACKET struct_declaration_list RIGHT_CURLY_BRACKET\n    | STRUCT IDENTIFIERstruct_declaration_list : struct_declaration\n    | struct_declaration_list struct_declarationstruct_declaration : specifier_qualifier_list struct_declarator_list SEMICOLONspecifier_qualifier_list : type_specifier specifier_qualifier_list\n    | type_specifier\n    | type_qualifier specifier_qualifier_list\n    | type_qualifierstruct_declarator_list : struct_declarator\n    | struct_declarator_list COMMA struct_declaratorstruct_declarator : declarator\n    | COLON constant_expression\n    | declarator COLON constant_expressiontype_qualifier : CONSTdeclarator : pointer direct_declarator\n    | direct_declaratordirect_declarator : IDENTIFIER\n    | LEFT_BRACKET declarator RIGHT_BRACKET\n    | direct_declarator LEFT_THIRD_BRACKET constant_expression RIGHT_THIRD_BRACKET\n    | direct_declarator LEFT_THIRD_BRACKET RIGHT_THIRD_BRACKET\n    | direct_declarator LEFT_BRACKET parameter_type_list RIGHT_BRACKET\n    | direct_declarator LEFT_BRACKET identifier_list RIGHT_BRACKET\n    | direct_declarator LEFT_BRACKET RIGHT_BRACKETpointer : MULTIPLY\n    | MULTIPLY type_qualifier_list\n    | MULTIPLY pointer\n    | MULTIPLY type_qualifier_list pointertype_qualifier_list : type_qualifier\n    | type_qualifier_list type_qualifierparameter_type_list : parameter_listparameter_list : parameter_declaration\n    | parameter_list COMMA parameter_declarationparameter_declaration : declaration_specifiers declarator\n    | declaration_specifiers abstract_declarator\n    | declaration_specifiersidentifier_list : IDENTIFIER\n    | identifier_list COMMA IDENTIFIERtype_name : specifier_qualifier_list\n    | specifier_qualifier_list abstract_declaratorabstract_declarator : pointer\n    | direct_abstract_declarator\n    | pointer direct_abstract_declaratordirect_abstract_declarator : LEFT_BRACKET abstract_declarator RIGHT_BRACKET\n    | LEFT_THIRD_BRACKET RIGHT_THIRD_BRACKET\n    | LEFT_THIRD_BRACKET constant_expression RIGHT_THIRD_BRACKET\n    | direct_abstract_declarator LEFT_THIRD_BRACKET RIGHT_THIRD_BRACKET\n    | direct_abstract_declarator LEFT_THIRD_BRACKET constant_expression RIGHT_THIRD_BRACKET\n    | LEFT_BRACKET RIGHT_BRACKET\n    | LEFT_BRACKET parameter_type_list RIGHT_BRACKET\n    | direct_abstract_declarator LEFT_BRACKET RIGHT_BRACKET\n    | direct_abstract_declarator LEFT_BRACKET parameter_type_list RIGHT_BRACKETinitializer : assignment_expression\n    | LEFT_CURLY_BRACKET initializer_list RIGHT_CURLY_BRACKET\n    | LEFT_CURLY_BRACKET initializer_list COMMA RIGHT_CURLY_BRACKETinitializer_list : initializer\n    | initializer_list COMMA initializerstatement : labeled_statement\n    | compound_statement\n    | expression_statement\n    | selection_statement\n    | iteration_statement\n    | jump_statementlabeled_statement : IDENTIFIER COLON statement\n    | CASE constant_expression COLON statement\n    | DEFAULT COLON statementcompound_statement : LEFT_CURLY_BRACKET RIGHT_CURLY_BRACKET\n    | LEFT_CURLY_BRACKET block_item_list RIGHT_CURLY_BRACKETblock_item_list : block_item\n    | block_item_list block_itemblock_item : declaration\n    | statement\n    declaration_list : declaration\n    | declaration_list declaration\n    expression_statement : SEMICOLON\n    | expression SEMICOLONselection_statement : IF LEFT_BRACKET expression RIGHT_BRACKET compound_statement\n    | IF LEFT_BRACKET expression RIGHT_BRACKET compound_statement ELSE compound_statement\n    | SWITCH LEFT_BRACKET expression RIGHT_BRACKET compound_statementiteration_statement : WHILE LEFT_BRACKET expression RIGHT_BRACKET compound_statement\n    | DO compound_statement WHILE LEFT_BRACKET expression RIGHT_BRACKET SEMICOLON\n    | FOR LEFT_BRACKET expression_statement expression_statement RIGHT_BRACKET compound_statement\n    | FOR LEFT_BRACKET expression_statement expression_statement expression RIGHT_BRACKET compound_statementjump_statement : GOTO IDENTIFIER SEMICOLON\n    | CONTINUE SEMICOLON\n    | BREAK SEMICOLON\n    | RETURN SEMICOLON\n    | RETURN expression SEMICOLONtranslation_unit : external_declaration\n    | translation_unit external_declarationexternal_declaration : function_definition\n    | declarationfunction_definition : declaration_specifiers declarator declaration_list compound_statement\n    | declaration_specifiers declarator compound_statement\n    | declarator declaration_list compound_statement\n    | declarator compound_statementinheritance_specifier : access_specifier IDENTIFIERinheritance_specifier_list : inheritance_specifier\n    | inheritance_specifier_list COMMA inheritance_specifieraccess_specifier : PRIVATE\n    | PUBLIC\n    | PROTECTEDclass_definition_head : CLASS\n    | CLASS INHERITANCE_OP inheritance_specifier_list\n    | CLASS IDENTIFIER\n    | CLASS IDENTIFIER  INHERITANCE_OP inheritance_specifier_listclass_definition : class_definition_head LEFT_CURLY_BRACKET class_internal_definition_list RIGHT_CURLY_BRACKET\n    | class_definition_headclass_internal_definition_list : class_internal_definition\n    | class_internal_definition_list class_internal_definitionclass_internal_definition : access_specifier LEFT_CURLY_BRACKET class_member_list RIGHT_CURLY_BRACKET SEMICOLONclass_member_list : class_member\n    | class_member_list class_memberclass_member : function_definition\n    | declaration"
    
_lr_action_items = {'TYPEDEF':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,33,34,35,36,37,40,41,42,43,48,50,55,59,60,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,128,133,141,154,155,158,163,164,168,177,178,179,225,226,227,229,234,237,245,247,249,250,253,255,263,264,295,300,306,311,312,313,314,315,318,340,343,344,345,356,358,359,360,],[13,13,-196,-198,-199,13,13,13,13,-124,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-122,-125,-215,-210,-197,13,-80,13,-203,-180,13,-123,13,-109,-212,13,-201,-81,-202,-181,-174,13,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,-128,-131,-126,-211,-205,-200,-175,-177,-183,-192,-193,-194,-127,-129,-130,13,13,-108,-214,13,-204,-213,-171,-173,-191,-195,13,13,-107,13,-219,-221,-222,-206,-172,-220,-184,-186,-187,-189,-185,-188,-190,]),'AUTO':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,33,34,35,36,37,40,41,42,43,48,50,55,59,60,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,128,133,141,154,155,158,163,164,168,177,178,179,225,226,227,229,234,237,245,247,249,250,253,255,263,264,295,300,306,311,312,313,314,315,318,340,343,344,345,356,358,359,360,],[14,14,-196,-198,-199,14,14,14,14,-124,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-122,-125,-215,-210,-197,14,-80,14,-203,-180,14,-123,14,-109,-212,14,-201,-81,-202,-181,-174,14,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,-128,-131,-126,-211,-205,-200,-175,-177,-183,-192,-193,-194,-127,-129,-130,14,14,-108,-214,14,-204,-213,-171,-173,-191,-195,14,14,-107,14,-219,-221,-222,-206,-172,-220,-184,-186,-187,-189,-185,-188,-190,]),'VOID':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,33,34,35,36,37,40,41,42,43,48,50,55,56,59,60,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,125,128,133,141,142,143,144,146,147,154,155,158,163,164,168,177,178,179,205,225,226,227,229,234,236,237,238,245,247,249,250,253,255,263,264,295,300,306,307,311,312,313,314,315,318,340,343,344,345,356,358,359,360,],[15,15,-196,-198,-199,15,15,15,15,-124,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-122,-125,-215,-210,-197,15,-80,15,-203,-180,15,-123,15,-109,15,-212,15,-201,-81,-202,-181,-174,15,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,15,-128,-131,-126,15,15,-110,15,15,-211,-205,-200,-175,-177,-183,-192,-193,-194,15,-127,-129,-130,15,15,15,-108,-111,-214,15,-204,-213,-171,-173,-191,-195,15,15,-107,-112,15,-219,-221,-222,-206,-172,-220,-184,-186,-187,-189,-185,-188,-190,]),'CHAR':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,33,34,35,36,37,40,41,42,43,48,50,55,56,59,60,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,125,128,133,141,142,143,144,146,147,154,155,158,163,164,168,177,178,179,205,225,226,227,229,234,236,237,238,245,247,249,250,253,255,263,264,295,300,306,307,311,312,313,314,315,318,340,343,344,345,356,358,359,360,],[16,16,-196,-198,-199,16,16,16,16,-124,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-122,-125,-215,-210,-197,16,-80,16,-203,-180,16,-123,16,-109,16,-212,16,-201,-81,-202,-181,-174,16,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,16,-128,-131,-126,16,16,-110,16,16,-211,-205,-200,-175,-177,-183,-192,-193,-194,16,-127,-129,-130,16,16,16,-108,-111,-214,16,-204,-213,-171,-173,-191,-195,16,16,-107,-112,16,-219,-221,-222,-206,-172,-220,-184,-186,-187,-189,-185,-188,-190,]),'SHORT':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,33,34,35,36,37,40,41,42,43,48,50,55,56,59,60,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,125,128,133,141,142,143,144,146,147,154,155,158,163,164,168,177,178,179,205,225,226,227,229,234,236,237,238,245,247,249,250,253,255,263,264,295,300,306,307,311,312,313,314,315,318,340,343,344,345,356,358,359,360,],[17,17,-196,-198,-199,17,17,17,17,-124,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-122,-125,-215,-210,-197,17,-80,17,-203,-180,17,-123,17,-109,17,-212,17,-201,-81,-202,-181,-174,17,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,17,-128,-131,-126,17,17,-110,17,17,-211,-205,-200,-175,-177,-183,-192,-193,-194,17,-127,-129,-130,17,17,17,-108,-111,-214,17,-204,-213,-171,-173,-191,-195,17,17,-107,-112,17,-219,-221,-222,-206,-172,-220,-184,-186,-187,-189,-185,-188,-190,]),'INT':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,33,34,35,36,37,40,41,42,43,48,50,55,56,59,60,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,125,128,133,141,142,143,144,146,147,154,155,158,163,164,168,177,178,179,205,225,226,227,229,234,236,237,238,245,247,249,250,253,255,263,264,295,300,306,307,311,312,313,314,315,318,340,343,344,345,356,358,359,360,],[18,18,-196,-198,-199,18,18,18,18,-124,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-122,-125,-215,-210,-197,18,-80,18,-203,-180,18,-123,18,-109,18,-212,18,-201,-81,-202,-181,-174,18,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,18,-128,-131,-126,18,18,-110,18,18,-211,-205,-200,-175,-177,-183,-192,-193,-194,18,-127,-129,-130,18,18,18,-108,-111,-214,18,-204,-213,-171,-173,-191,-195,18,18,-107,-112,18,-219,-221,-222,-206,-172,-220,-184,-186,-187,-189,-185,-188,-190,]),'LONG':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,33,34,35,36,37,40,41,42,43,48,50,55,56,59,60,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,125,128,133,141,142,143,144,146,147,154,155,158,163,164,168,177,178,179,205,225,226,227,229,234,236,237,238,245,247,249,250,253,255,263,264,295,300,306,307,311,312,313,314,315,318,340,343,344,345,356,358,359,360,],[19,19,-196,-198,-199,19,19,19,19,-124,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-122,-125,-215,-210,-197,19,-80,19,-203,-180,19,-123,19,-109,19,-212,19,-201,-81,-202,-181,-174,19,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,19,-128,-131,-126,19,19,-110,19,19,-211,-205,-200,-175,-177,-183,-192,-193,-194,19,-127,-129,-130,19,19,19,-108,-111,-214,19,-204,-213,-171,-173,-191,-195,19,19,-107,-112,19,-219,-221,-222,-206,-172,-220,-184,-186,-187,-189,-185,-188,-190,]),'FLOAT':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,33,34,35,36,37,40,41,42,43,48,50,55,56,59,60,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,125,128,133,141,142,143,144,146,147,154,155,158,163,164,168,177,178,179,205,225,226,227,229,234,236,237,238,245,247,249,250,253,255,263,264,295,300,306,307,311,312,313,314,315,318,340,343,344,345,356,358,359,360,],[20,20,-196,-198,-199,20,20,20,20,-124,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-122,-125,-215,-210,-197,20,-80,20,-203,-180,20,-123,20,-109,20,-212,20,-201,-81,-202,-181,-174,20,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,20,-128,-131,-126,20,20,-110,20,20,-211,-205,-200,-175,-177,-183,-192,-193,-194,20,-127,-129,-130,20,20,20,-108,-111,-214,20,-204,-213,-171,-173,-191,-195,20,20,-107,-112,20,-219,-221,-222,-206,-172,-220,-184,-186,-187,-189,-185,-188,-190,]),'DOUBLE':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,33,34,35,36,37,40,41,42,43,48,50,55,56,59,60,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,125,128,133,141,142,143,144,146,147,154,155,158,163,164,168,177,178,179,205,225,226,227,229,234,236,237,238,245,247,249,250,253,255,263,264,295,300,306,307,311,312,313,314,315,318,340,343,344,345,356,358,359,360,],[21,21,-196,-198,-199,21,21,21,21,-124,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-122,-125,-215,-210,-197,21,-80,21,-203,-180,21,-123,21,-109,21,-212,21,-201,-81,-202,-181,-174,21,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,21,-128,-131,-126,21,21,-110,21,21,-211,-205,-200,-175,-177,-183,-192,-193,-194,21,-127,-129,-130,21,21,21,-108,-111,-214,21,-204,-213,-171,-173,-191,-195,21,21,-107,-112,21,-219,-221,-222,-206,-172,-220,-184,-186,-187,-189,-185,-188,-190,]),'SIGNED':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,33,34,35,36,37,40,41,42,43,48,50,55,56,59,60,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,125,128,133,141,142,143,144,146,147,154,155,158,163,164,168,177,178,179,205,225,226,227,229,234,236,237,238,245,247,249,250,253,255,263,264,295,300,306,307,311,312,313,314,315,318,340,343,344,345,356,358,359,360,],[22,22,-196,-198,-199,22,22,22,22,-124,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-122,-125,-215,-210,-197,22,-80,22,-203,-180,22,-123,22,-109,22,-212,22,-201,-81,-202,-181,-174,22,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,22,-128,-131,-126,22,22,-110,22,22,-211,-205,-200,-175,-177,-183,-192,-193,-194,22,-127,-129,-130,22,22,22,-108,-111,-214,22,-204,-213,-171,-173,-191,-195,22,22,-107,-112,22,-219,-221,-222,-206,-172,-220,-184,-186,-187,-189,-185,-188,-190,]),'UNSIGNED':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,33,34,35,36,37,40,41,42,43,48,50,55,56,59,60,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,125,128,133,141,142,143,144,146,147,154,155,158,163,164,168,177,178,179,205,225,226,227,229,234,236,237,238,245,247,249,250,253,255,263,264,295,300,306,307,311,312,313,314,315,318,340,343,344,345,356,358,359,360,],[23,23,-196,-198,-199,23,23,23,23,-124,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-122,-125,-215,-210,-197,23,-80,23,-203,-180,23,-123,23,-109,23,-212,23,-201,-81,-202,-181,-174,23,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,23,-128,-131,-126,23,23,-110,23,23,-211,-205,-200,-175,-177,-183,-192,-193,-194,23,-127,-129,-130,23,23,23,-108,-111,-214,23,-204,-213,-171,-173,-191,-195,23,23,-107,-112,23,-219,-221,-222,-206,-172,-220,-184,-186,-187,-189,-185,-188,-190,]),'BOOL':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,33,34,35,36,37,40,41,42,43,48,50,55,56,59,60,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,125,128,133,141,142,143,144,146,147,154,155,158,163,164,168,177,178,179,205,225,226,227,229,234,236,237,238,245,247,249,250,253,255,263,264,295,300,306,307,311,312,313,314,315,318,340,343,344,345,356,358,359,360,],[24,24,-196,-198,-199,24,24,24,24,-124,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-122,-125,-215,-210,-197,24,-80,24,-203,-180,24,-123,24,-109,24,-212,24,-201,-81,-202,-181,-174,24,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,24,-128,-131,-126,24,24,-110,24,24,-211,-205,-200,-175,-177,-183,-192,-193,-194,24,-127,-129,-130,24,24,24,-108,-111,-214,24,-204,-213,-171,-173,-191,-195,24,24,-107,-112,24,-219,-221,-222,-206,-172,-220,-184,-186,-187,-189,-185,-188,-190,]),'TYPE_NAME':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,33,34,35,36,37,40,41,42,43,48,50,55,56,59,60,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,125,128,133,141,142,143,144,146,147,154,155,158,163,164,168,177,178,179,205,225,226,227,229,234,236,237,238,245,247,249,250,253,255,263,264,295,300,306,307,311,312,313,314,315,318,340,343,344,345,356,358,359,360,],[27,27,-196,-198,-199,27,27,27,27,-124,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-122,-125,-215,-210,-197,27,-80,27,-203,-180,27,-123,27,-109,27,-212,27,-201,-81,-202,-181,-174,27,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,27,-128,-131,-126,27,27,-110,27,27,-211,-205,-200,-175,-177,-183,-192,-193,-194,27,-127,-129,-130,27,27,27,-108,-111,-214,27,-204,-213,-171,-173,-191,-195,27,27,-107,-112,27,-219,-221,-222,-206,-172,-220,-184,-186,-187,-189,-185,-188,-190,]),'CONST':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,33,34,35,36,37,40,41,42,43,48,50,51,53,55,56,59,60,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,125,128,133,140,141,142,143,144,146,147,154,155,158,163,164,168,177,178,179,205,225,226,227,229,234,236,237,238,245,247,249,250,253,255,263,264,295,300,306,307,311,312,313,314,315,318,340,343,344,345,356,358,359,360,],[28,28,-196,-198,-199,28,28,28,28,-124,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-122,28,-125,-215,-210,-197,28,-80,28,-203,-180,28,-123,28,28,-136,-109,28,-212,28,-201,-81,-202,-181,-174,28,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,28,-128,-131,-137,-126,28,28,-110,28,28,-211,-205,-200,-175,-177,-183,-192,-193,-194,28,-127,-129,-130,28,28,28,-108,-111,-214,28,-204,-213,-171,-173,-191,-195,28,28,-107,-112,28,-219,-221,-222,-206,-172,-220,-184,-186,-187,-189,-185,-188,-190,]),'MULTIPLY':([0,2,3,4,5,6,8,9,10,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,33,34,35,37,41,43,44,45,46,47,49,51,53,55,59,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,84,92,95,97,98,99,100,101,102,104,105,106,107,108,109,110,112,113,114,115,116,117,124,130,131,138,140,145,146,147,154,155,158,161,163,164,165,167,168,169,170,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,234,235,237,242,243,244,245,247,249,250,253,254,255,258,262,263,264,269,272,273,287,288,289,290,291,292,295,299,306,308,309,311,312,313,314,315,317,318,322,323,324,325,326,327,328,329,340,343,344,345,356,358,359,360,],[29,29,-196,-198,-199,29,-83,-85,-87,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-122,29,29,-215,-210,-197,-80,-203,106,29,-82,-84,-86,106,29,-136,-109,-212,-201,106,-81,29,-202,-174,106,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,-2,106,106,106,-32,-20,106,106,106,-34,106,-10,-26,-27,-28,-29,-30,-31,-3,-4,-5,-6,-7,-8,220,-32,-2,29,-137,29,-114,-116,-211,-205,-200,106,-175,-177,106,106,-183,106,106,106,106,106,-192,-193,-194,106,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,106,106,106,106,-16,-17,-21,-22,-23,-24,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,29,29,106,-108,106,-113,-115,-214,29,-204,-213,-171,106,-173,-9,106,-191,-195,-12,-14,-15,220,220,-35,-36,-37,106,29,106,-107,29,106,29,-219,-221,-222,-206,106,-172,106,106,106,-11,-13,106,-25,-33,-220,-184,-186,-187,-189,-185,-188,-190,]),'IDENTIFIER':([0,2,3,4,5,6,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,37,41,43,44,45,46,47,49,50,51,52,53,55,59,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,80,84,89,92,98,99,100,102,105,106,107,108,109,110,138,139,140,145,146,147,151,152,153,154,155,156,158,161,163,164,165,167,168,169,170,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,228,232,234,235,237,242,243,244,245,247,249,250,253,254,255,262,263,264,292,299,306,308,309,311,312,313,314,315,317,318,322,323,324,327,340,343,344,345,356,358,359,360,],[30,30,-196,-198,-199,30,-83,-85,-87,30,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-122,-132,30,55,-215,59,-197,-80,-203,79,30,-82,-84,-86,131,136,-133,-134,-136,-109,-212,-201,131,-81,30,-202,-174,79,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,131,131,176,131,131,131,131,131,-26,-27,-28,-29,-30,-31,30,-135,-137,30,-114,-116,-207,-208,-209,-211,-205,249,-200,131,-175,-177,79,79,-183,131,131,131,131,131,-192,-193,-194,131,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,131,131,131,131,272,273,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,296,30,30,131,-108,131,-113,-115,-214,30,-204,-213,-171,79,-173,131,-191,-195,131,131,-107,30,131,30,-219,-221,-222,-206,131,-172,131,131,131,131,-220,-184,-186,-187,-189,-185,-188,-190,]),'LEFT_BRACKET':([0,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,37,41,43,44,45,46,47,48,49,51,52,53,55,59,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,85,86,88,92,97,98,99,100,102,104,105,106,107,108,109,110,112,113,114,115,116,117,128,131,133,138,139,140,141,145,146,147,154,155,158,161,163,164,165,167,168,169,170,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,199,200,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,225,226,227,232,233,234,235,237,242,243,244,245,247,249,250,253,254,255,258,261,262,263,264,269,272,273,292,294,295,298,299,301,304,306,308,309,311,312,313,314,315,317,318,322,323,324,325,326,327,330,332,334,335,336,340,343,344,345,351,352,356,358,359,360,],[31,31,-196,-198,-199,31,-83,-85,-87,31,50,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-122,-132,-125,31,-215,-210,-197,-80,-203,84,31,-82,-84,-86,50,84,-133,-134,-136,-109,-212,-201,84,-81,31,-202,-174,84,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,-2,84,170,84,172,173,175,84,196,84,84,84,205,-10,-26,-27,-28,-29,-30,-31,-3,-4,-5,-6,-7,-8,-128,-2,-131,234,-135,-137,-126,31,-114,-116,-211,-205,-200,84,-175,-177,84,84,-183,84,84,84,84,84,-192,-193,-194,84,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,84,84,84,84,-16,-17,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,295,-127,-129,-130,234,300,234,84,-108,84,-113,-115,-214,31,-204,-213,-171,84,-173,-9,322,84,-191,-195,-12,-14,-15,84,295,295,300,84,-156,-152,-107,31,84,31,-219,-221,-222,-206,84,-172,84,84,84,-11,-13,84,-154,-158,-151,-157,-153,-220,-184,-186,-187,-155,-159,-189,-185,-188,-190,]),'STRUCT':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,33,34,35,36,37,40,41,42,43,48,50,55,56,59,60,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,125,128,133,141,142,143,144,146,147,154,155,158,163,164,168,177,178,179,205,225,226,227,229,234,236,237,238,245,247,249,250,253,255,263,264,295,300,306,307,311,312,313,314,315,318,340,343,344,345,356,358,359,360,],[32,32,-196,-198,-199,32,32,32,32,-124,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-122,-125,-215,-210,-197,32,-80,32,-203,-180,32,-123,32,-109,32,-212,32,-201,-81,-202,-181,-174,32,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,32,-128,-131,-126,32,32,-110,32,32,-211,-205,-200,-175,-177,-183,-192,-193,-194,32,-127,-129,-130,32,32,32,-108,-111,-214,32,-204,-213,-171,-173,-191,-195,32,32,-107,-112,32,-219,-221,-222,-206,-172,-220,-184,-186,-187,-189,-185,-188,-190,]),'CLASS':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,33,34,35,36,37,40,41,42,43,48,50,55,56,59,60,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,125,128,133,141,142,143,144,146,147,154,155,158,163,164,168,177,178,179,205,225,226,227,229,234,236,237,238,245,247,249,250,253,255,263,264,295,300,306,307,311,312,313,314,315,318,340,343,344,345,356,358,359,360,],[34,34,-196,-198,-199,34,34,34,34,-124,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-122,-125,-215,-210,-197,34,-80,34,-203,-180,34,-123,34,-109,34,-212,34,-201,-81,-202,-181,-174,34,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,34,-128,-131,-126,34,34,-110,34,34,-211,-205,-200,-175,-177,-183,-192,-193,-194,34,-127,-129,-130,34,34,34,-108,-111,-214,34,-204,-213,-171,-173,-191,-195,34,34,-107,-112,34,-219,-221,-222,-206,-172,-220,-184,-186,-187,-189,-185,-188,-190,]),'$end':([1,2,3,4,5,35,37,41,61,63,65,67,158,163,],[0,-1,-196,-198,-199,-197,-80,-203,-201,-81,-202,-174,-200,-175,]),'SEMICOLON':([6,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,33,34,36,37,38,39,43,44,45,46,47,48,55,59,63,67,68,69,70,71,72,73,74,75,76,77,78,79,82,90,91,92,93,94,95,96,97,101,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,128,129,130,131,133,141,154,155,159,160,162,163,164,165,167,168,175,176,177,178,179,180,199,200,201,202,203,204,225,226,227,237,239,240,241,245,249,250,253,254,255,256,258,262,263,264,265,267,269,272,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,306,310,315,316,318,325,326,328,329,337,338,339,341,343,344,345,349,355,356,358,359,360,],[37,-83,-85,-87,-124,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-122,-125,-215,-210,-90,-80,63,-88,72,37,-82,-84,-86,-123,-109,-212,-81,-174,72,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,-2,168,177,178,179,-77,-64,-32,-62,-20,-34,-60,-10,-58,-3,-4,-5,-6,-7,-8,-56,-54,-52,-49,-44,-41,-38,-90,-128,-79,-32,-2,-131,-126,-211,-205,-91,-160,-89,-175,-177,72,72,-183,72,263,-192,-193,-194,264,-16,-17,-21,-22,-23,-24,-127,-129,-130,-108,307,-117,-119,-214,-204,-213,-171,72,-173,-78,-9,72,-191,-195,-65,-61,-12,-14,-15,-59,-57,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-107,-120,-206,-161,-172,-11,-13,-25,-33,-118,-121,353,-162,-184,-186,-187,-63,359,-189,-185,-188,-190,]),'LEFT_CURLY_BRACKET':([7,12,30,32,33,34,36,37,40,42,43,48,55,59,60,62,63,66,67,68,69,70,71,72,73,74,75,76,77,78,87,128,133,141,150,151,152,153,154,155,161,163,164,165,167,168,177,178,179,225,226,227,249,250,253,254,255,263,264,315,317,318,319,320,321,343,344,345,347,354,356,357,358,359,360,],[43,-124,-125,56,57,-210,43,-80,43,-180,43,-123,142,-212,43,161,-81,-181,-174,43,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,43,-128,-131,-126,247,-207,-208,-209,-211,-205,161,-175,-177,43,43,-183,-192,-193,-194,-127,-129,-130,-204,-213,-171,43,-173,-191,-195,-206,161,-172,43,43,43,-184,-186,-187,43,43,-189,43,-185,-188,-190,]),'LEFT_THIRD_BRACKET':([8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,33,34,45,46,47,48,51,52,53,55,59,79,97,104,112,113,114,115,116,117,128,131,133,138,139,140,141,146,147,154,155,199,200,224,225,226,227,232,233,234,237,243,244,245,249,250,258,269,272,273,294,295,298,301,304,306,315,325,326,330,332,334,335,336,351,352,],[-83,-85,-87,49,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-122,-132,-125,-215,-210,-82,-84,-86,49,-133,-134,-136,-109,-212,-2,195,-10,-3,-4,-5,-6,-7,-8,-128,-2,-131,235,-135,-137,-126,-114,-116,-211,-205,-16,-17,235,-127,-129,-130,235,299,235,-108,-113,-115,-214,-204,-213,-9,-12,-14,-15,235,235,299,-156,-152,-107,-206,-11,-13,-154,-158,-151,-157,-153,-155,-159,]),'COMMA':([8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,33,34,36,38,39,45,46,47,48,51,52,53,55,59,79,82,93,94,95,96,97,101,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,128,129,130,131,133,134,135,136,137,138,139,140,141,154,155,159,160,162,171,180,199,200,201,202,203,204,225,226,227,230,231,232,233,237,239,240,241,245,249,250,251,252,256,257,258,259,260,265,266,267,268,269,270,271,272,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,296,297,298,301,304,306,310,315,316,325,326,328,329,330,332,334,335,336,337,338,341,342,346,348,349,350,351,352,],[-83,-85,-87,-124,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-122,-132,-125,-215,-210,-90,64,-88,-82,-84,-86,-123,-133,-134,-136,-109,-212,-2,169,-77,-64,-32,-62,-20,-34,-60,-10,-58,-3,-4,-5,-6,-7,-8,-56,-54,-52,-49,-44,-41,-38,-90,-128,-79,-32,-2,-131,228,229,-144,-139,-143,-135,-137,-126,248,-205,-91,-160,-89,169,169,-16,-17,-21,-22,-23,-24,-127,-129,-130,-141,-142,-148,-149,-108,308,-117,-119,-214,-204,248,317,-163,-78,169,-9,169,169,-65,169,-61,169,-12,327,-18,-14,-15,-59,-57,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-145,-140,-150,-156,-152,-107,-120,-206,-161,-11,-13,-25,-33,-154,-158,-151,-157,-153,-118,-121,-162,-164,169,169,-63,-19,-155,-159,]),'RIGHT_BRACKET':([8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,33,34,45,46,47,48,50,51,52,53,54,55,59,72,93,94,95,96,97,101,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,128,130,131,132,133,134,135,136,137,138,139,140,141,146,147,154,155,168,171,196,199,200,201,202,203,204,224,225,226,227,230,231,232,233,234,237,243,244,245,249,250,256,257,258,259,260,265,267,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,300,301,302,303,304,306,315,323,325,326,328,329,330,332,333,334,335,336,346,348,349,350,351,352,],[-83,-85,-87,-124,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-122,-132,-125,-215,-210,-82,-84,-86,-123,133,-133,-134,-136,141,-109,-212,-182,-77,-64,-32,-62,-20,-34,-60,-10,-58,-3,-4,-5,-6,-7,-8,-56,-54,-52,-49,-44,-41,-38,-128,-32,-2,226,-131,227,-138,-144,-139,-143,-135,-137,-126,-114,-116,-211,-205,-183,258,269,-16,-17,-21,-22,-23,-24,-146,-127,-129,-130,-141,-142,-148,-149,301,-108,-113,-115,-214,-204,-213,-78,319,-9,320,321,-65,-61,-12,326,-18,-14,-15,328,-59,-57,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-147,-148,301,-145,-140,-150,332,-156,334,335,-152,-107,-206,347,-11,-13,-25,-33,-154,-158,352,-151,-157,-153,355,357,-63,-19,-155,-159,]),'EQ':([12,30,36,48,79,95,97,104,112,113,114,115,116,117,126,128,130,131,133,141,199,200,201,202,203,204,225,226,227,258,269,272,273,325,326,328,329,],[-124,-125,62,-123,-2,182,-20,-10,-3,-4,-5,-6,-7,-8,62,-128,-32,-2,-131,-126,-16,-17,-21,-22,-23,-24,-127,-129,-130,-9,-12,-14,-15,-11,-13,-25,-33,]),'COLON':([12,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,33,34,48,55,59,79,81,93,94,95,96,97,101,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,128,129,130,131,133,141,145,146,147,154,155,166,199,200,201,202,203,204,225,226,227,237,241,243,244,245,249,250,256,258,265,266,267,269,272,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,306,308,315,325,326,328,329,349,],[-124,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-122,-125,-215,-210,-123,-109,-212,165,167,-77,-64,-32,-62,-20,-34,-60,-10,-58,-3,-4,-5,-6,-7,-8,-56,-54,-52,-49,-44,-41,-38,-128,-79,-32,-2,-131,-126,242,-114,-116,-211,-205,254,-16,-17,-21,-22,-23,-24,-127,-129,-130,-108,309,-113,-115,-214,-204,-213,-78,-9,-65,324,-61,-12,-14,-15,-59,-57,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-107,242,-206,-11,-13,-25,-33,-63,]),')':([15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,33,34,51,52,53,55,59,139,140,146,147,154,155,223,224,233,237,243,244,245,249,250,293,294,298,301,304,306,315,330,332,334,335,336,351,352,],[-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-122,-132,-215,-210,-133,-134,-136,-109,-212,-135,-137,-114,-116,-211,-205,292,-146,-149,-108,-113,-115,-214,-204,-213,-147,-148,-150,-156,-152,-107,-206,-154,-158,-151,-157,-153,-155,-159,]),'INHERITANCE_OP':([34,59,],[58,157,]),'RIGHT_CURLY_BRACKET':([37,41,43,61,63,65,67,68,69,70,71,72,73,74,75,76,77,78,94,95,96,97,101,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,130,131,143,144,148,149,158,160,163,164,168,177,178,179,199,200,201,202,203,204,236,238,246,251,252,253,255,258,263,264,265,267,269,272,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,307,311,312,313,314,316,317,318,325,326,328,329,340,341,342,343,344,345,349,353,356,358,359,360,],[-80,-203,67,-201,-81,-202,-174,163,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,-64,-32,-62,-20,-34,-60,-10,-58,-3,-4,-5,-6,-7,-8,-56,-54,-52,-49,-44,-41,-38,-32,-2,237,-110,245,-216,-200,-160,-175,-177,-183,-192,-193,-194,-16,-17,-21,-22,-23,-24,306,-111,-217,316,-163,-171,-173,-9,-191,-195,-65,-61,-12,-14,-15,-59,-57,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-112,339,-219,-221,-222,-161,341,-172,-11,-13,-25,-33,-220,-162,-164,-184,-186,-187,-63,-218,-189,-185,-188,-190,]),'CASE':([37,43,63,67,68,69,70,71,72,73,74,75,76,77,78,163,164,165,167,168,177,178,179,253,254,255,263,264,318,343,344,345,356,358,359,360,],[-80,80,-81,-174,80,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,-175,-177,80,80,-183,-192,-193,-194,-171,80,-173,-191,-195,-172,-184,-186,-187,-189,-185,-188,-190,]),'DEFAULT':([37,43,63,67,68,69,70,71,72,73,74,75,76,77,78,163,164,165,167,168,177,178,179,253,254,255,263,264,318,343,344,345,356,358,359,360,],[-80,81,-81,-174,81,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,-175,-177,81,81,-183,-192,-193,-194,-171,81,-173,-191,-195,-172,-184,-186,-187,-189,-185,-188,-190,]),'IF':([37,43,63,67,68,69,70,71,72,73,74,75,76,77,78,163,164,165,167,168,177,178,179,253,254,255,263,264,318,343,344,345,356,358,359,360,],[-80,83,-81,-174,83,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,-175,-177,83,83,-183,-192,-193,-194,-171,83,-173,-191,-195,-172,-184,-186,-187,-189,-185,-188,-190,]),'SWITCH':([37,43,63,67,68,69,70,71,72,73,74,75,76,77,78,163,164,165,167,168,177,178,179,253,254,255,263,264,318,343,344,345,356,358,359,360,],[-80,85,-81,-174,85,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,-175,-177,85,85,-183,-192,-193,-194,-171,85,-173,-191,-195,-172,-184,-186,-187,-189,-185,-188,-190,]),'WHILE':([37,43,63,67,68,69,70,71,72,73,74,75,76,77,78,163,164,165,167,168,174,177,178,179,253,254,255,263,264,318,343,344,345,356,358,359,360,],[-80,86,-81,-174,86,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,-175,-177,86,86,-183,261,-192,-193,-194,-171,86,-173,-191,-195,-172,-184,-186,-187,-189,-185,-188,-190,]),'DO':([37,43,63,67,68,69,70,71,72,73,74,75,76,77,78,163,164,165,167,168,177,178,179,253,254,255,263,264,318,343,344,345,356,358,359,360,],[-80,87,-81,-174,87,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,-175,-177,87,87,-183,-192,-193,-194,-171,87,-173,-191,-195,-172,-184,-186,-187,-189,-185,-188,-190,]),'FOR':([37,43,63,67,68,69,70,71,72,73,74,75,76,77,78,163,164,165,167,168,177,178,179,253,254,255,263,264,318,343,344,345,356,358,359,360,],[-80,88,-81,-174,88,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,-175,-177,88,88,-183,-192,-193,-194,-171,88,-173,-191,-195,-172,-184,-186,-187,-189,-185,-188,-190,]),'GOTO':([37,43,63,67,68,69,70,71,72,73,74,75,76,77,78,163,164,165,167,168,177,178,179,253,254,255,263,264,318,343,344,345,356,358,359,360,],[-80,89,-81,-174,89,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,-175,-177,89,89,-183,-192,-193,-194,-171,89,-173,-191,-195,-172,-184,-186,-187,-189,-185,-188,-190,]),'CONTINUE':([37,43,63,67,68,69,70,71,72,73,74,75,76,77,78,163,164,165,167,168,177,178,179,253,254,255,263,264,318,343,344,345,356,358,359,360,],[-80,90,-81,-174,90,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,-175,-177,90,90,-183,-192,-193,-194,-171,90,-173,-191,-195,-172,-184,-186,-187,-189,-185,-188,-190,]),'BREAK':([37,43,63,67,68,69,70,71,72,73,74,75,76,77,78,163,164,165,167,168,177,178,179,253,254,255,263,264,318,343,344,345,356,358,359,360,],[-80,91,-81,-174,91,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,-175,-177,91,91,-183,-192,-193,-194,-171,91,-173,-191,-195,-172,-184,-186,-187,-189,-185,-188,-190,]),'RETURN':([37,43,63,67,68,69,70,71,72,73,74,75,76,77,78,163,164,165,167,168,177,178,179,253,254,255,263,264,318,343,344,345,356,358,359,360,],[-80,92,-81,-174,92,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,-175,-177,92,92,-183,-192,-193,-194,-171,92,-173,-191,-195,-172,-184,-186,-187,-189,-185,-188,-190,]),'INC_OP':([37,43,49,62,63,67,68,69,70,71,72,73,74,75,76,77,78,79,80,84,92,97,98,99,100,102,104,105,106,107,108,109,110,112,113,114,115,116,117,131,161,163,164,165,167,168,169,170,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,199,200,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,235,242,253,254,255,258,262,263,264,269,272,273,292,299,309,317,318,322,323,324,325,326,327,343,344,345,356,358,359,360,],[-80,98,98,98,-81,-174,98,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,-2,98,98,98,199,98,98,98,98,-10,-26,-27,-28,-29,-30,-31,-3,-4,-5,-6,-7,-8,-2,98,-175,-177,98,98,-183,98,98,98,98,98,-192,-193,-194,98,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,98,98,98,98,-16,-17,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,-171,98,-173,-9,98,-191,-195,-12,-14,-15,98,98,98,98,-172,98,98,98,-11,-13,98,-184,-186,-187,-189,-185,-188,-190,]),'DEC_OP':([37,43,49,62,63,67,68,69,70,71,72,73,74,75,76,77,78,79,80,84,92,97,98,99,100,102,104,105,106,107,108,109,110,112,113,114,115,116,117,131,161,163,164,165,167,168,169,170,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,199,200,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,235,242,253,254,255,258,262,263,264,269,272,273,292,299,309,317,318,322,323,324,325,326,327,343,344,345,356,358,359,360,],[-80,99,99,99,-81,-174,99,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,-2,99,99,99,200,99,99,99,99,-10,-26,-27,-28,-29,-30,-31,-3,-4,-5,-6,-7,-8,-2,99,-175,-177,99,99,-183,99,99,99,99,99,-192,-193,-194,99,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,99,99,99,99,-16,-17,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-171,99,-173,-9,99,-191,-195,-12,-14,-15,99,99,99,99,-172,99,99,99,-11,-13,99,-184,-186,-187,-189,-185,-188,-190,]),'SIZEOF':([37,43,49,62,63,67,68,69,70,71,72,73,74,75,76,77,78,80,84,92,98,99,100,102,105,106,107,108,109,110,161,163,164,165,167,168,169,170,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,235,242,253,254,255,262,263,264,292,299,309,317,318,322,323,324,327,343,344,345,356,358,359,360,],[-80,102,102,102,-81,-174,102,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,102,102,102,102,102,102,102,-26,-27,-28,-29,-30,-31,102,-175,-177,102,102,-183,102,102,102,102,102,-192,-193,-194,102,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,-171,102,-173,102,-191,-195,102,102,102,102,-172,102,102,102,102,-184,-186,-187,-189,-185,-188,-190,]),'BITWISE_AND':([37,43,49,62,63,67,68,69,70,71,72,73,74,75,76,77,78,79,80,84,92,95,97,98,99,100,101,102,104,105,106,107,108,109,110,112,113,114,115,116,117,119,120,121,122,123,124,130,131,161,163,164,165,167,168,169,170,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,235,242,253,254,255,258,262,263,264,269,272,273,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,299,309,317,318,322,323,324,325,326,327,328,329,343,344,345,356,358,359,360,],[-80,105,105,105,-81,-174,105,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,-2,105,105,105,-32,-20,105,105,105,-34,105,-10,-26,-27,-28,-29,-30,-31,-3,-4,-5,-6,-7,-8,209,-52,-49,-44,-41,-38,-32,-2,105,-175,-177,105,105,-183,105,105,105,105,105,-192,-193,-194,105,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,105,105,105,105,-16,-17,-21,-22,-23,-24,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,-171,105,-173,-9,105,-191,-195,-12,-14,-15,209,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,105,105,105,105,-172,105,105,105,-11,-13,105,-25,-33,-184,-186,-187,-189,-185,-188,-190,]),'PLUS':([37,43,49,62,63,67,68,69,70,71,72,73,74,75,76,77,78,79,80,84,92,95,97,98,99,100,101,102,104,105,106,107,108,109,110,112,113,114,115,116,117,123,124,130,131,161,163,164,165,167,168,169,170,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,235,242,253,254,255,258,262,263,264,269,272,273,285,286,287,288,289,290,291,292,299,309,317,318,322,323,324,325,326,327,328,329,343,344,345,356,358,359,360,],[-80,107,107,107,-81,-174,107,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,-2,107,107,107,-32,-20,107,107,107,-34,107,-10,-26,-27,-28,-29,-30,-31,-3,-4,-5,-6,-7,-8,218,-38,-32,-2,107,-175,-177,107,107,-183,107,107,107,107,107,-192,-193,-194,107,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,107,107,107,107,-16,-17,-21,-22,-23,-24,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,-171,107,-173,-9,107,-191,-195,-12,-14,-15,218,218,-39,-40,-35,-36,-37,107,107,107,107,-172,107,107,107,-11,-13,107,-25,-33,-184,-186,-187,-189,-185,-188,-190,]),'MINUS':([37,43,49,62,63,67,68,69,70,71,72,73,74,75,76,77,78,79,80,84,92,95,97,98,99,100,101,102,104,105,106,107,108,109,110,112,113,114,115,116,117,123,124,130,131,161,163,164,165,167,168,169,170,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,235,242,253,254,255,258,262,263,264,269,272,273,285,286,287,288,289,290,291,292,299,309,317,318,322,323,324,325,326,327,328,329,343,344,345,356,358,359,360,],[-80,108,108,108,-81,-174,108,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,-2,108,108,108,-32,-20,108,108,108,-34,108,-10,-26,-27,-28,-29,-30,-31,-3,-4,-5,-6,-7,-8,219,-38,-32,-2,108,-175,-177,108,108,-183,108,108,108,108,108,-192,-193,-194,108,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,108,108,108,108,-16,-17,-21,-22,-23,-24,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,-171,108,-173,-9,108,-191,-195,-12,-14,-15,219,219,-39,-40,-35,-36,-37,108,108,108,108,-172,108,108,108,-11,-13,108,-25,-33,-184,-186,-187,-189,-185,-188,-190,]),'BITWISE_NOT':([37,43,49,62,63,67,68,69,70,71,72,73,74,75,76,77,78,80,84,92,98,99,100,102,105,106,107,108,109,110,161,163,164,165,167,168,169,170,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,235,242,253,254,255,262,263,264,292,299,309,317,318,322,323,324,327,343,344,345,356,358,359,360,],[-80,109,109,109,-81,-174,109,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,109,109,109,109,109,109,109,-26,-27,-28,-29,-30,-31,109,-175,-177,109,109,-183,109,109,109,109,109,-192,-193,-194,109,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-171,109,-173,109,-191,-195,109,109,109,109,-172,109,109,109,109,-184,-186,-187,-189,-185,-188,-190,]),'LOGICAL_NOT':([37,43,49,62,63,67,68,69,70,71,72,73,74,75,76,77,78,80,84,92,98,99,100,102,105,106,107,108,109,110,161,163,164,165,167,168,169,170,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,235,242,253,254,255,262,263,264,292,299,309,317,318,322,323,324,327,343,344,345,356,358,359,360,],[-80,110,110,110,-81,-174,110,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,110,110,110,110,110,110,110,-26,-27,-28,-29,-30,-31,110,-175,-177,110,110,-183,110,110,110,110,110,-192,-193,-194,110,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,-171,110,-173,110,-191,-195,110,110,110,110,-172,110,110,110,110,-184,-186,-187,-189,-185,-188,-190,]),'FLOAT_CONSTANT':([37,43,49,62,63,67,68,69,70,71,72,73,74,75,76,77,78,80,84,92,98,99,100,102,105,106,107,108,109,110,161,163,164,165,167,168,169,170,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,235,242,253,254,255,262,263,264,292,299,309,317,318,322,323,324,327,343,344,345,356,358,359,360,],[-80,112,112,112,-81,-174,112,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,112,112,112,112,112,112,112,-26,-27,-28,-29,-30,-31,112,-175,-177,112,112,-183,112,112,112,112,112,-192,-193,-194,112,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,-171,112,-173,112,-191,-195,112,112,112,112,-172,112,112,112,112,-184,-186,-187,-189,-185,-188,-190,]),'HEX_CONSTANT':([37,43,49,62,63,67,68,69,70,71,72,73,74,75,76,77,78,80,84,92,98,99,100,102,105,106,107,108,109,110,161,163,164,165,167,168,169,170,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,235,242,253,254,255,262,263,264,292,299,309,317,318,322,323,324,327,343,344,345,356,358,359,360,],[-80,113,113,113,-81,-174,113,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,113,113,113,113,113,113,113,-26,-27,-28,-29,-30,-31,113,-175,-177,113,113,-183,113,113,113,113,113,-192,-193,-194,113,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,-171,113,-173,113,-191,-195,113,113,113,113,-172,113,113,113,113,-184,-186,-187,-189,-185,-188,-190,]),'OCT_CONSTANT':([37,43,49,62,63,67,68,69,70,71,72,73,74,75,76,77,78,80,84,92,98,99,100,102,105,106,107,108,109,110,161,163,164,165,167,168,169,170,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,235,242,253,254,255,262,263,264,292,299,309,317,318,322,323,324,327,343,344,345,356,358,359,360,],[-80,114,114,114,-81,-174,114,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,114,114,114,114,114,114,114,-26,-27,-28,-29,-30,-31,114,-175,-177,114,114,-183,114,114,114,114,114,-192,-193,-194,114,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,-171,114,-173,114,-191,-195,114,114,114,114,-172,114,114,114,114,-184,-186,-187,-189,-185,-188,-190,]),'INT_CONSTANT':([37,43,49,62,63,67,68,69,70,71,72,73,74,75,76,77,78,80,84,92,98,99,100,102,105,106,107,108,109,110,161,163,164,165,167,168,169,170,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,235,242,253,254,255,262,263,264,292,299,309,317,318,322,323,324,327,343,344,345,356,358,359,360,],[-80,115,115,115,-81,-174,115,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,115,115,115,115,115,115,115,-26,-27,-28,-29,-30,-31,115,-175,-177,115,115,-183,115,115,115,115,115,-192,-193,-194,115,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,-171,115,-173,115,-191,-195,115,115,115,115,-172,115,115,115,115,-184,-186,-187,-189,-185,-188,-190,]),'CHAR_CONSTANT':([37,43,49,62,63,67,68,69,70,71,72,73,74,75,76,77,78,80,84,92,98,99,100,102,105,106,107,108,109,110,161,163,164,165,167,168,169,170,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,235,242,253,254,255,262,263,264,292,299,309,317,318,322,323,324,327,343,344,345,356,358,359,360,],[-80,116,116,116,-81,-174,116,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,116,116,116,116,116,116,116,-26,-27,-28,-29,-30,-31,116,-175,-177,116,116,-183,116,116,116,116,116,-192,-193,-194,116,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,-171,116,-173,116,-191,-195,116,116,116,116,-172,116,116,116,116,-184,-186,-187,-189,-185,-188,-190,]),'STRING_LITERAL':([37,43,49,62,63,67,68,69,70,71,72,73,74,75,76,77,78,80,84,92,98,99,100,102,105,106,107,108,109,110,161,163,164,165,167,168,169,170,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,235,242,253,254,255,262,263,264,292,299,309,317,318,322,323,324,327,343,344,345,356,358,359,360,],[-80,117,117,117,-81,-174,117,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,117,117,117,117,117,117,117,-26,-27,-28,-29,-30,-31,117,-175,-177,117,117,-183,117,117,117,117,117,-192,-193,-194,117,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,-171,117,-173,117,-191,-195,117,117,117,117,-172,117,117,117,117,-184,-186,-187,-189,-185,-188,-190,]),'(':([37,43,49,62,63,67,68,69,70,71,72,73,74,75,76,77,78,80,84,92,100,105,106,107,108,109,110,161,163,164,165,167,168,169,170,172,173,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,235,242,253,254,255,262,263,264,292,299,309,317,318,322,323,324,327,343,344,345,356,358,359,360,],[-80,125,125,125,-81,-174,125,-176,-178,-179,-182,-165,-166,-167,-168,-169,-170,125,125,125,125,-26,-27,-28,-29,-30,-31,125,-175,-177,125,125,-183,125,125,125,125,125,-192,-193,-194,125,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,-171,125,-173,125,-191,-195,125,125,125,125,-172,125,125,125,125,-184,-186,-187,-189,-185,-188,-190,]),'RIGHT_THIRD_BRACKET':([49,93,94,95,96,97,101,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,127,129,130,131,199,200,201,202,203,204,235,256,258,265,267,268,269,272,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,299,305,325,326,328,329,331,349,],[128,-77,-64,-32,-62,-20,-34,-60,-10,-58,-3,-4,-5,-6,-7,-8,-56,-54,-52,-49,-44,-41,-38,225,-79,-32,-2,-16,-17,-21,-22,-23,-24,304,-78,-9,-65,-61,325,-12,-14,-15,-59,-57,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,330,336,-11,-13,-25,-33,351,-63,]),'PRIVATE':([57,58,148,149,157,246,248,353,],[151,151,151,-216,151,-217,151,-218,]),'PUBLIC':([57,58,148,149,157,246,248,353,],[152,152,152,-216,152,-217,152,-218,]),'PROTECTED':([57,58,148,149,157,246,248,353,],[153,153,153,-216,153,-217,153,-218,]),'ELSE':([67,163,343,],[-174,-175,354,]),'DOT':([79,97,104,112,113,114,115,116,117,131,199,200,258,269,272,273,325,326,],[-2,197,-10,-3,-4,-5,-6,-7,-8,-2,-16,-17,-9,-12,-14,-15,-11,-13,]),'PTR_OP':([79,97,104,112,113,114,115,116,117,131,199,200,258,269,272,273,325,326,],[-2,198,-10,-3,-4,-5,-6,-7,-8,-2,-16,-17,-9,-12,-14,-15,-11,-13,]),'MUL_ASSIGN':([79,95,97,104,112,113,114,115,116,117,130,131,199,200,201,202,203,204,258,269,272,273,325,326,328,329,],[-2,183,-20,-10,-3,-4,-5,-6,-7,-8,-32,-2,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,-11,-13,-25,-33,]),'DIV_ASSIGN':([79,95,97,104,112,113,114,115,116,117,130,131,199,200,201,202,203,204,258,269,272,273,325,326,328,329,],[-2,184,-20,-10,-3,-4,-5,-6,-7,-8,-32,-2,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,-11,-13,-25,-33,]),'MOD_ASSIGN':([79,95,97,104,112,113,114,115,116,117,130,131,199,200,201,202,203,204,258,269,272,273,325,326,328,329,],[-2,185,-20,-10,-3,-4,-5,-6,-7,-8,-32,-2,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,-11,-13,-25,-33,]),'ADD_ASSIGN':([79,95,97,104,112,113,114,115,116,117,130,131,199,200,201,202,203,204,258,269,272,273,325,326,328,329,],[-2,186,-20,-10,-3,-4,-5,-6,-7,-8,-32,-2,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,-11,-13,-25,-33,]),'SUB_ASSIGN':([79,95,97,104,112,113,114,115,116,117,130,131,199,200,201,202,203,204,258,269,272,273,325,326,328,329,],[-2,187,-20,-10,-3,-4,-5,-6,-7,-8,-32,-2,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,-11,-13,-25,-33,]),'LEFT_ASSIGN':([79,95,97,104,112,113,114,115,116,117,130,131,199,200,201,202,203,204,258,269,272,273,325,326,328,329,],[-2,188,-20,-10,-3,-4,-5,-6,-7,-8,-32,-2,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,-11,-13,-25,-33,]),'RIGHT_ASSIGN':([79,95,97,104,112,113,114,115,116,117,130,131,199,200,201,202,203,204,258,269,272,273,325,326,328,329,],[-2,189,-20,-10,-3,-4,-5,-6,-7,-8,-32,-2,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,-11,-13,-25,-33,]),'AND_ASSIGN':([79,95,97,104,112,113,114,115,116,117,130,131,199,200,201,202,203,204,258,269,272,273,325,326,328,329,],[-2,190,-20,-10,-3,-4,-5,-6,-7,-8,-32,-2,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,-11,-13,-25,-33,]),'XOR_ASSIGN':([79,95,97,104,112,113,114,115,116,117,130,131,199,200,201,202,203,204,258,269,272,273,325,326,328,329,],[-2,191,-20,-10,-3,-4,-5,-6,-7,-8,-32,-2,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,-11,-13,-25,-33,]),'OR_ASSIGN':([79,95,97,104,112,113,114,115,116,117,130,131,199,200,201,202,203,204,258,269,272,273,325,326,328,329,],[-2,192,-20,-10,-3,-4,-5,-6,-7,-8,-32,-2,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,-11,-13,-25,-33,]),'DIVIDE':([79,95,97,101,104,112,113,114,115,116,117,124,130,131,199,200,201,202,203,204,258,269,272,273,287,288,289,290,291,325,326,328,329,],[-2,-32,-20,-34,-10,-3,-4,-5,-6,-7,-8,221,-32,-2,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,221,221,-35,-36,-37,-11,-13,-25,-33,]),'MOD':([79,95,97,101,104,112,113,114,115,116,117,124,130,131,199,200,201,202,203,204,258,269,272,273,287,288,289,290,291,325,326,328,329,],[-2,-32,-20,-34,-10,-3,-4,-5,-6,-7,-8,222,-32,-2,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,222,222,-35,-36,-37,-11,-13,-25,-33,]),'LEFT_OP':([79,95,97,101,104,112,113,114,115,116,117,122,123,124,130,131,199,200,201,202,203,204,258,269,272,273,281,282,283,284,285,286,287,288,289,290,291,325,326,328,329,],[-2,-32,-20,-34,-10,-3,-4,-5,-6,-7,-8,216,-41,-38,-32,-2,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,216,216,216,216,-42,-43,-39,-40,-35,-36,-37,-11,-13,-25,-33,]),'RIGHT_OP':([79,95,97,101,104,112,113,114,115,116,117,122,123,124,130,131,199,200,201,202,203,204,258,269,272,273,281,282,283,284,285,286,287,288,289,290,291,325,326,328,329,],[-2,-32,-20,-34,-10,-3,-4,-5,-6,-7,-8,217,-41,-38,-32,-2,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,217,217,217,217,-42,-43,-39,-40,-35,-36,-37,-11,-13,-25,-33,]),'LESS':([79,95,97,101,104,112,113,114,115,116,117,121,122,123,124,130,131,199,200,201,202,203,204,258,269,272,273,279,280,281,282,283,284,285,286,287,288,289,290,291,325,326,328,329,],[-2,-32,-20,-34,-10,-3,-4,-5,-6,-7,-8,212,-44,-41,-38,-32,-2,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,212,212,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-11,-13,-25,-33,]),'GREATER':([79,95,97,101,104,112,113,114,115,116,117,121,122,123,124,130,131,199,200,201,202,203,204,258,269,272,273,279,280,281,282,283,284,285,286,287,288,289,290,291,325,326,328,329,],[-2,-32,-20,-34,-10,-3,-4,-5,-6,-7,-8,213,-44,-41,-38,-32,-2,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,213,213,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-11,-13,-25,-33,]),'LE_OP':([79,95,97,101,104,112,113,114,115,116,117,121,122,123,124,130,131,199,200,201,202,203,204,258,269,272,273,279,280,281,282,283,284,285,286,287,288,289,290,291,325,326,328,329,],[-2,-32,-20,-34,-10,-3,-4,-5,-6,-7,-8,214,-44,-41,-38,-32,-2,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,214,214,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-11,-13,-25,-33,]),'GE_OP':([79,95,97,101,104,112,113,114,115,116,117,121,122,123,124,130,131,199,200,201,202,203,204,258,269,272,273,279,280,281,282,283,284,285,286,287,288,289,290,291,325,326,328,329,],[-2,-32,-20,-34,-10,-3,-4,-5,-6,-7,-8,215,-44,-41,-38,-32,-2,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,215,215,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-11,-13,-25,-33,]),'EQ_OP':([79,95,97,101,104,112,113,114,115,116,117,120,121,122,123,124,130,131,199,200,201,202,203,204,258,269,272,273,278,279,280,281,282,283,284,285,286,287,288,289,290,291,325,326,328,329,],[-2,-32,-20,-34,-10,-3,-4,-5,-6,-7,-8,210,-49,-44,-41,-38,-32,-2,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,210,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-11,-13,-25,-33,]),'NE_OP':([79,95,97,101,104,112,113,114,115,116,117,120,121,122,123,124,130,131,199,200,201,202,203,204,258,269,272,273,278,279,280,281,282,283,284,285,286,287,288,289,290,291,325,326,328,329,],[-2,-32,-20,-34,-10,-3,-4,-5,-6,-7,-8,211,-49,-44,-41,-38,-32,-2,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,211,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-11,-13,-25,-33,]),'BITWISE_XOR':([79,95,97,101,104,112,113,114,115,116,117,118,119,120,121,122,123,124,130,131,199,200,201,202,203,204,258,269,272,273,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,325,326,328,329,],[-2,-32,-20,-34,-10,-3,-4,-5,-6,-7,-8,208,-54,-52,-49,-44,-41,-38,-32,-2,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,208,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-11,-13,-25,-33,]),'BITWISE_OR':([79,95,97,101,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,130,131,199,200,201,202,203,204,258,269,272,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,325,326,328,329,],[-2,-32,-20,-34,-10,207,-3,-4,-5,-6,-7,-8,-56,-54,-52,-49,-44,-41,-38,-32,-2,-16,-17,-21,-22,-23,-24,-9,-12,-14,-15,207,-57,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-11,-13,-25,-33,]),'LOGICAL_AND_OP':([79,95,97,101,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,130,131,199,200,201,202,203,204,258,267,269,272,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,325,326,328,329,],[-2,-32,-20,-34,206,-10,-58,-3,-4,-5,-6,-7,-8,-56,-54,-52,-49,-44,-41,-38,-32,-2,-16,-17,-21,-22,-23,-24,-9,206,-12,-14,-15,-59,-57,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-11,-13,-25,-33,]),'QUESTION':([79,95,96,97,101,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,130,131,199,200,201,202,203,204,258,267,269,272,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,325,326,328,329,],[-2,-32,193,-20,-34,-60,-10,-58,-3,-4,-5,-6,-7,-8,-56,-54,-52,-49,-44,-41,-38,-32,-2,-16,-17,-21,-22,-23,-24,-9,-61,-12,-14,-15,-59,-57,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-11,-13,-25,-33,]),'LOGICAL_OR_OP':([79,95,96,97,101,103,104,111,112,113,114,115,116,117,118,119,120,121,122,123,124,130,131,199,200,201,202,203,204,258,267,269,272,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,325,326,328,329,],[-2,-32,194,-20,-34,-60,-10,-58,-3,-4,-5,-6,-7,-8,-56,-54,-52,-49,-44,-41,-38,-32,-2,-16,-17,-21,-22,-23,-24,-9,-61,-12,-14,-15,-59,-57,-55,-53,-50,-51,-45,-46,-47,-48,-42,-43,-39,-40,-35,-36,-37,-11,-13,-25,-33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'translation_unit':([0,],[2,]),'external_declaration':([0,2,],[3,35,]),'function_definition':([0,2,247,311,],[4,4,313,313,]),'declaration':([0,2,7,36,40,43,60,68,247,311,],[5,5,42,42,66,70,66,70,314,314,]),'declaration_specifiers':([0,2,7,8,9,10,36,40,43,50,60,68,229,234,247,295,300,311,],[6,6,44,45,46,47,44,44,44,138,44,44,138,138,6,138,138,6,]),'declarator':([0,2,6,31,44,64,138,145,234,247,308,311,],[7,7,36,54,126,126,230,241,54,7,241,7,]),'storage_class_specifier':([0,2,7,8,9,10,36,40,43,50,60,68,229,234,247,295,300,311,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'type_specifier':([0,2,7,8,9,10,36,40,43,50,56,60,68,125,142,143,146,147,205,229,234,236,247,295,300,311,],[9,9,9,9,9,9,9,9,9,9,146,9,9,146,146,146,146,146,146,9,9,146,9,9,9,9,]),'type_qualifier':([0,2,7,8,9,10,29,36,40,43,50,51,56,60,68,125,142,143,146,147,205,229,234,236,247,295,300,311,],[10,10,10,10,10,10,53,10,10,10,10,140,147,10,10,147,147,147,147,147,147,10,10,147,10,10,10,10,]),'pointer':([0,2,6,29,31,44,51,64,138,145,224,234,247,295,308,311,],[11,11,11,52,11,11,139,11,232,11,294,232,11,294,11,11,]),'direct_declarator':([0,2,6,11,31,44,64,138,145,232,234,247,308,311,],[12,12,12,48,12,12,12,12,12,48,12,12,12,12,]),'struct_specifier':([0,2,7,8,9,10,36,40,43,50,56,60,68,125,142,143,146,147,205,229,234,236,247,295,300,311,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'class_definition':([0,2,7,8,9,10,36,40,43,50,56,60,68,125,142,143,146,147,205,229,234,236,247,295,300,311,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'class_definition_head':([0,2,7,8,9,10,36,40,43,50,56,60,68,125,142,143,146,147,205,229,234,236,247,295,300,311,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'init_declarator_list':([6,44,],[38,38,]),'init_declarator':([6,44,64,],[39,39,162,]),'declaration_list':([7,36,],[40,60,]),'compound_statement':([7,36,40,43,60,68,87,165,167,254,319,320,321,347,354,357,],[41,61,65,74,158,74,174,74,74,74,343,344,345,356,358,360,]),'type_qualifier_list':([29,],[51,]),'block_item_list':([43,],[68,]),'block_item':([43,68,],[69,164,]),'statement':([43,68,165,167,254,],[71,71,253,255,318,]),'labeled_statement':([43,68,165,167,254,],[73,73,73,73,73,]),'expression_statement':([43,68,165,167,175,254,262,],[75,75,75,75,262,75,323,]),'selection_statement':([43,68,165,167,254,],[76,76,76,76,76,]),'iteration_statement':([43,68,165,167,254,],[77,77,77,77,77,]),'jump_statement':([43,68,165,167,254,],[78,78,78,78,78,]),'expression':([43,68,84,92,165,167,170,172,173,175,193,195,205,254,262,322,323,],[82,82,171,180,82,82,257,259,260,82,266,268,171,82,82,346,348,]),'assignment_expression':([43,62,68,84,92,161,165,167,169,170,172,173,175,181,193,195,196,205,254,262,317,322,323,327,],[93,160,93,93,93,160,93,93,256,93,93,93,93,265,93,93,271,93,93,93,160,93,93,350,]),'conditional_expression':([43,49,62,68,80,84,92,161,165,167,169,170,172,173,175,181,193,195,196,205,235,242,254,262,299,309,317,322,323,324,327,],[94,129,94,94,129,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,129,129,94,94,129,129,94,94,94,349,94,]),'unary_expression':([43,49,62,68,80,84,92,98,99,100,102,161,165,167,169,170,172,173,175,181,193,194,195,196,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,235,242,254,262,292,299,309,317,322,323,324,327,],[95,130,95,95,130,95,95,201,202,130,204,95,95,95,95,95,95,95,95,95,95,130,95,95,95,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,95,95,130,130,130,95,95,95,130,95,]),'logical_or_expression':([43,49,62,68,80,84,92,161,165,167,169,170,172,173,175,181,193,195,196,205,235,242,254,262,299,309,317,322,323,324,327,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'postfix_expression':([43,49,62,68,80,84,92,98,99,100,102,161,165,167,169,170,172,173,175,181,193,194,195,196,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,235,242,254,262,292,299,309,317,322,323,324,327,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'unary_operator':([43,49,62,68,80,84,92,98,99,100,102,161,165,167,169,170,172,173,175,181,193,194,195,196,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,235,242,254,262,292,299,309,317,322,323,324,327,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'cast_expression':([43,49,62,68,80,84,92,100,161,165,167,169,170,172,173,175,181,193,194,195,196,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,235,242,254,262,292,299,309,317,322,323,324,327,],[101,101,101,101,101,101,101,203,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,289,290,291,101,101,101,101,329,101,101,101,101,101,101,101,]),'logical_and_expression':([43,49,62,68,80,84,92,161,165,167,169,170,172,173,175,181,193,194,195,196,205,235,242,254,262,299,309,317,322,323,324,327,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,267,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'primary_expression':([43,49,62,68,80,84,92,98,99,100,102,161,165,167,169,170,172,173,175,181,193,194,195,196,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,235,242,254,262,292,299,309,317,322,323,324,327,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'inclusive_or_expression':([43,49,62,68,80,84,92,161,165,167,169,170,172,173,175,181,193,194,195,196,205,206,235,242,254,262,299,309,317,322,323,324,327,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,275,111,111,111,111,111,111,111,111,111,111,111,]),'exclusive_or_expression':([43,49,62,68,80,84,92,161,165,167,169,170,172,173,175,181,193,194,195,196,205,206,207,235,242,254,262,299,309,317,322,323,324,327,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,276,118,118,118,118,118,118,118,118,118,118,118,]),'and_expression':([43,49,62,68,80,84,92,161,165,167,169,170,172,173,175,181,193,194,195,196,205,206,207,208,235,242,254,262,299,309,317,322,323,324,327,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,277,119,119,119,119,119,119,119,119,119,119,119,]),'equality_expression':([43,49,62,68,80,84,92,161,165,167,169,170,172,173,175,181,193,194,195,196,205,206,207,208,209,235,242,254,262,299,309,317,322,323,324,327,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,278,120,120,120,120,120,120,120,120,120,120,120,]),'relational_expression':([43,49,62,68,80,84,92,161,165,167,169,170,172,173,175,181,193,194,195,196,205,206,207,208,209,210,211,235,242,254,262,299,309,317,322,323,324,327,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,279,280,121,121,121,121,121,121,121,121,121,121,121,]),'shift_expression':([43,49,62,68,80,84,92,161,165,167,169,170,172,173,175,181,193,194,195,196,205,206,207,208,209,210,211,212,213,214,215,235,242,254,262,299,309,317,322,323,324,327,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,281,282,283,284,122,122,122,122,122,122,122,122,122,122,122,]),'additive_expression':([43,49,62,68,80,84,92,161,165,167,169,170,172,173,175,181,193,194,195,196,205,206,207,208,209,210,211,212,213,214,215,216,217,235,242,254,262,299,309,317,322,323,324,327,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,285,286,123,123,123,123,123,123,123,123,123,123,123,]),'multiplicative_expression':([43,49,62,68,80,84,92,161,165,167,169,170,172,173,175,181,193,194,195,196,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,235,242,254,262,299,309,317,322,323,324,327,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,287,288,124,124,124,124,124,124,124,124,124,124,124,]),'constant_expression':([49,80,235,242,299,309,],[127,166,305,310,331,338,]),'parameter_type_list':([50,234,295,300,],[132,303,303,333,]),'identifier_list':([50,],[134,]),'parameter_list':([50,234,295,300,],[135,135,135,135,]),'parameter_declaration':([50,229,234,295,300,],[137,297,137,137,137,]),'struct_declaration_list':([56,142,],[143,236,]),'struct_declaration':([56,142,143,236,],[144,144,238,238,]),'specifier_qualifier_list':([56,125,142,143,146,147,205,236,],[145,224,145,145,243,244,224,145,]),'class_internal_definition_list':([57,],[148,]),'class_internal_definition':([57,148,],[149,246,]),'access_specifier':([57,58,148,157,248,],[150,156,150,156,156,]),'inheritance_specifier_list':([58,157,],[154,250,]),'inheritance_specifier':([58,157,248,],[155,155,315,]),'initializer':([62,161,317,],[159,252,342,]),'assignment_operator':([95,],[181,]),'type_name':([125,205,],[223,274,]),'abstract_declarator':([138,224,234,295,],[231,293,302,302,]),'direct_abstract_declarator':([138,224,232,234,294,295,],[233,233,298,233,298,233,]),'struct_declarator_list':([145,],[239,]),'struct_declarator':([145,308,],[240,337,]),'initializer_list':([161,],[251,]),'argument_expression_list':([196,],[270,]),'class_member_list':([247,],[311,]),'class_member':([247,311,],[312,340,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> translation_unit','start',1,'p_start','parser.py',12),
  ('primary_expression -> IDENTIFIER','primary_expression',1,'p_primary_expression','parser.py',17),
  ('primary_expression -> FLOAT_CONSTANT','primary_expression',1,'p_primary_expression','parser.py',18),
  ('primary_expression -> HEX_CONSTANT','primary_expression',1,'p_primary_expression','parser.py',19),
  ('primary_expression -> OCT_CONSTANT','primary_expression',1,'p_primary_expression','parser.py',20),
  ('primary_expression -> INT_CONSTANT','primary_expression',1,'p_primary_expression','parser.py',21),
  ('primary_expression -> CHAR_CONSTANT','primary_expression',1,'p_primary_expression','parser.py',22),
  ('primary_expression -> STRING_LITERAL','primary_expression',1,'p_primary_expression','parser.py',23),
  ('primary_expression -> LEFT_BRACKET expression RIGHT_BRACKET','primary_expression',3,'p_primary_expression','parser.py',24),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression','parser.py',30),
  ('postfix_expression -> postfix_expression LEFT_THIRD_BRACKET expression RIGHT_THIRD_BRACKET','postfix_expression',4,'p_postfix_expression','parser.py',31),
  ('postfix_expression -> postfix_expression LEFT_BRACKET RIGHT_BRACKET','postfix_expression',3,'p_postfix_expression','parser.py',32),
  ('postfix_expression -> postfix_expression LEFT_BRACKET argument_expression_list RIGHT_BRACKET','postfix_expression',4,'p_postfix_expression','parser.py',33),
  ('postfix_expression -> postfix_expression DOT IDENTIFIER','postfix_expression',3,'p_postfix_expression','parser.py',34),
  ('postfix_expression -> postfix_expression PTR_OP IDENTIFIER','postfix_expression',3,'p_postfix_expression','parser.py',35),
  ('postfix_expression -> postfix_expression INC_OP','postfix_expression',2,'p_postfix_expression','parser.py',36),
  ('postfix_expression -> postfix_expression DEC_OP','postfix_expression',2,'p_postfix_expression','parser.py',37),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','parser.py',43),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','parser.py',44),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression','parser.py',50),
  ('unary_expression -> INC_OP unary_expression','unary_expression',2,'p_unary_expression','parser.py',51),
  ('unary_expression -> DEC_OP unary_expression','unary_expression',2,'p_unary_expression','parser.py',52),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression','parser.py',53),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression','parser.py',54),
  ('unary_expression -> SIZEOF LEFT_BRACKET type_name RIGHT_BRACKET','unary_expression',4,'p_unary_expression','parser.py',55),
  ('unary_operator -> BITWISE_AND','unary_operator',1,'p_unary_operator','parser.py',61),
  ('unary_operator -> MULTIPLY','unary_operator',1,'p_unary_operator','parser.py',62),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','parser.py',63),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','parser.py',64),
  ('unary_operator -> BITWISE_NOT','unary_operator',1,'p_unary_operator','parser.py',65),
  ('unary_operator -> LOGICAL_NOT','unary_operator',1,'p_unary_operator','parser.py',66),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression','parser.py',72),
  ('cast_expression -> ( type_name ) cast_expression','cast_expression',4,'p_cast_expression','parser.py',73),
  ('multiplicative_expression -> cast_expression','multiplicative_expression',1,'p_multiplicative_expression','parser.py',80),
  ('multiplicative_expression -> multiplicative_expression MULTIPLY cast_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',81),
  ('multiplicative_expression -> multiplicative_expression DIVIDE cast_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',82),
  ('multiplicative_expression -> multiplicative_expression MOD cast_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',83),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','parser.py',90),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',91),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',92),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression','parser.py',99),
  ('shift_expression -> shift_expression LEFT_OP additive_expression','shift_expression',3,'p_shift_expression','parser.py',100),
  ('shift_expression -> shift_expression RIGHT_OP additive_expression','shift_expression',3,'p_shift_expression','parser.py',101),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression','parser.py',108),
  ('relational_expression -> relational_expression LESS shift_expression','relational_expression',3,'p_relational_expression','parser.py',109),
  ('relational_expression -> relational_expression GREATER shift_expression','relational_expression',3,'p_relational_expression','parser.py',110),
  ('relational_expression -> relational_expression LE_OP shift_expression','relational_expression',3,'p_relational_expression','parser.py',111),
  ('relational_expression -> relational_expression GE_OP shift_expression','relational_expression',3,'p_relational_expression','parser.py',112),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','parser.py',119),
  ('equality_expression -> equality_expression EQ_OP relational_expression','equality_expression',3,'p_equality_expression','parser.py',120),
  ('equality_expression -> equality_expression NE_OP relational_expression','equality_expression',3,'p_equality_expression','parser.py',121),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression','parser.py',128),
  ('and_expression -> and_expression BITWISE_AND equality_expression','and_expression',3,'p_and_expression','parser.py',129),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression','parser.py',136),
  ('exclusive_or_expression -> exclusive_or_expression BITWISE_XOR and_expression','exclusive_or_expression',3,'p_exclusive_or_expression','parser.py',137),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression','parser.py',143),
  ('inclusive_or_expression -> inclusive_or_expression BITWISE_OR exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression','parser.py',144),
  ('logical_and_expression -> inclusive_or_expression','logical_and_expression',1,'p_logical_and_expression','parser.py',151),
  ('logical_and_expression -> logical_and_expression LOGICAL_AND_OP inclusive_or_expression','logical_and_expression',3,'p_logical_and_expression','parser.py',152),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression','parser.py',159),
  ('logical_or_expression -> logical_or_expression LOGICAL_OR_OP logical_and_expression','logical_or_expression',3,'p_logical_or_expression','parser.py',160),
  ('conditional_expression -> logical_or_expression','conditional_expression',1,'p_conditional_expression','parser.py',167),
  ('conditional_expression -> logical_or_expression QUESTION expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','parser.py',168),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','parser.py',174),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','parser.py',175),
  ('assignment_operator -> EQ','assignment_operator',1,'p_assignment_operator','parser.py',182),
  ('assignment_operator -> MUL_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',183),
  ('assignment_operator -> DIV_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',184),
  ('assignment_operator -> MOD_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',185),
  ('assignment_operator -> ADD_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',186),
  ('assignment_operator -> SUB_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',187),
  ('assignment_operator -> LEFT_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',188),
  ('assignment_operator -> RIGHT_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',189),
  ('assignment_operator -> AND_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',190),
  ('assignment_operator -> XOR_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',191),
  ('assignment_operator -> OR_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',192),
  ('expression -> assignment_expression','expression',1,'p_expression','parser.py',199),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','parser.py',200),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','parser.py',206),
  ('declaration -> declaration_specifiers SEMICOLON','declaration',2,'p_declaration','parser.py',212),
  ('declaration -> declaration_specifiers init_declarator_list SEMICOLON','declaration',3,'p_declaration','parser.py',213),
  ('declaration_specifiers -> storage_class_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser.py',234),
  ('declaration_specifiers -> storage_class_specifier','declaration_specifiers',1,'p_declaration_specifiers','parser.py',235),
  ('declaration_specifiers -> type_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser.py',236),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers','parser.py',237),
  ('declaration_specifiers -> type_qualifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser.py',238),
  ('declaration_specifiers -> type_qualifier','declaration_specifiers',1,'p_declaration_specifiers','parser.py',239),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','parser.py',246),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','parser.py',247),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','parser.py',253),
  ('init_declarator -> declarator EQ initializer','init_declarator',3,'p_init_declarator','parser.py',254),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','parser.py',260),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','parser.py',261),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier','parser.py',267),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier','parser.py',268),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier','parser.py',269),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','parser.py',270),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier','parser.py',271),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','parser.py',272),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier','parser.py',273),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier','parser.py',274),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier','parser.py',275),
  ('type_specifier -> BOOL','type_specifier',1,'p_type_specifier','parser.py',276),
  ('type_specifier -> struct_specifier','type_specifier',1,'p_type_specifier','parser.py',277),
  ('type_specifier -> class_definition','type_specifier',1,'p_type_specifier','parser.py',278),
  ('type_specifier -> TYPE_NAME','type_specifier',1,'p_type_specifier','parser.py',279),
  ('struct_specifier -> STRUCT IDENTIFIER LEFT_CURLY_BRACKET struct_declaration_list RIGHT_CURLY_BRACKET','struct_specifier',5,'p_struct_specifier','parser.py',286),
  ('struct_specifier -> STRUCT LEFT_CURLY_BRACKET struct_declaration_list RIGHT_CURLY_BRACKET','struct_specifier',4,'p_struct_specifier','parser.py',287),
  ('struct_specifier -> STRUCT IDENTIFIER','struct_specifier',2,'p_struct_specifier','parser.py',288),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','parser.py',294),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','parser.py',295),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list SEMICOLON','struct_declaration',3,'p_struct_declaration','parser.py',301),
  ('specifier_qualifier_list -> type_specifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list','parser.py',307),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','parser.py',308),
  ('specifier_qualifier_list -> type_qualifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list','parser.py',309),
  ('specifier_qualifier_list -> type_qualifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','parser.py',310),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','parser.py',316),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','parser.py',317),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator','parser.py',324),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator','parser.py',325),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator','parser.py',326),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','parser.py',332),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator','parser.py',338),
  ('declarator -> direct_declarator','declarator',1,'p_declarator','parser.py',339),
  ('direct_declarator -> IDENTIFIER','direct_declarator',1,'p_direct_declarator','parser.py',345),
  ('direct_declarator -> LEFT_BRACKET declarator RIGHT_BRACKET','direct_declarator',3,'p_direct_declarator','parser.py',346),
  ('direct_declarator -> direct_declarator LEFT_THIRD_BRACKET constant_expression RIGHT_THIRD_BRACKET','direct_declarator',4,'p_direct_declarator','parser.py',347),
  ('direct_declarator -> direct_declarator LEFT_THIRD_BRACKET RIGHT_THIRD_BRACKET','direct_declarator',3,'p_direct_declarator','parser.py',348),
  ('direct_declarator -> direct_declarator LEFT_BRACKET parameter_type_list RIGHT_BRACKET','direct_declarator',4,'p_direct_declarator','parser.py',349),
  ('direct_declarator -> direct_declarator LEFT_BRACKET identifier_list RIGHT_BRACKET','direct_declarator',4,'p_direct_declarator','parser.py',350),
  ('direct_declarator -> direct_declarator LEFT_BRACKET RIGHT_BRACKET','direct_declarator',3,'p_direct_declarator','parser.py',351),
  ('pointer -> MULTIPLY','pointer',1,'p_pointer','parser.py',357),
  ('pointer -> MULTIPLY type_qualifier_list','pointer',2,'p_pointer','parser.py',358),
  ('pointer -> MULTIPLY pointer','pointer',2,'p_pointer','parser.py',359),
  ('pointer -> MULTIPLY type_qualifier_list pointer','pointer',3,'p_pointer','parser.py',360),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','parser.py',366),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','parser.py',367),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','parser.py',373),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','parser.py',379),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','parser.py',380),
  ('parameter_declaration -> declaration_specifiers declarator','parameter_declaration',2,'p_parameter_declaration','parser.py',386),
  ('parameter_declaration -> declaration_specifiers abstract_declarator','parameter_declaration',2,'p_parameter_declaration','parser.py',387),
  ('parameter_declaration -> declaration_specifiers','parameter_declaration',1,'p_parameter_declaration','parser.py',388),
  ('identifier_list -> IDENTIFIER','identifier_list',1,'p_identifier_list','parser.py',394),
  ('identifier_list -> identifier_list COMMA IDENTIFIER','identifier_list',3,'p_identifier_list','parser.py',395),
  ('type_name -> specifier_qualifier_list','type_name',1,'p_type_name','parser.py',401),
  ('type_name -> specifier_qualifier_list abstract_declarator','type_name',2,'p_type_name','parser.py',402),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator','parser.py',408),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator','parser.py',409),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator','parser.py',410),
  ('direct_abstract_declarator -> LEFT_BRACKET abstract_declarator RIGHT_BRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',416),
  ('direct_abstract_declarator -> LEFT_THIRD_BRACKET RIGHT_THIRD_BRACKET','direct_abstract_declarator',2,'p_direct_abstract_declarator','parser.py',417),
  ('direct_abstract_declarator -> LEFT_THIRD_BRACKET constant_expression RIGHT_THIRD_BRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',418),
  ('direct_abstract_declarator -> direct_abstract_declarator LEFT_THIRD_BRACKET RIGHT_THIRD_BRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',419),
  ('direct_abstract_declarator -> direct_abstract_declarator LEFT_THIRD_BRACKET constant_expression RIGHT_THIRD_BRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator','parser.py',420),
  ('direct_abstract_declarator -> LEFT_BRACKET RIGHT_BRACKET','direct_abstract_declarator',2,'p_direct_abstract_declarator','parser.py',421),
  ('direct_abstract_declarator -> LEFT_BRACKET parameter_type_list RIGHT_BRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',422),
  ('direct_abstract_declarator -> direct_abstract_declarator LEFT_BRACKET RIGHT_BRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',423),
  ('direct_abstract_declarator -> direct_abstract_declarator LEFT_BRACKET parameter_type_list RIGHT_BRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator','parser.py',424),
  ('initializer -> assignment_expression','initializer',1,'p_initializer','parser.py',430),
  ('initializer -> LEFT_CURLY_BRACKET initializer_list RIGHT_CURLY_BRACKET','initializer',3,'p_initializer','parser.py',431),
  ('initializer -> LEFT_CURLY_BRACKET initializer_list COMMA RIGHT_CURLY_BRACKET','initializer',4,'p_initializer','parser.py',432),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list','parser.py',438),
  ('initializer_list -> initializer_list COMMA initializer','initializer_list',3,'p_initializer_list','parser.py',439),
  ('statement -> labeled_statement','statement',1,'p_statement','parser.py',445),
  ('statement -> compound_statement','statement',1,'p_statement','parser.py',446),
  ('statement -> expression_statement','statement',1,'p_statement','parser.py',447),
  ('statement -> selection_statement','statement',1,'p_statement','parser.py',448),
  ('statement -> iteration_statement','statement',1,'p_statement','parser.py',449),
  ('statement -> jump_statement','statement',1,'p_statement','parser.py',450),
  ('labeled_statement -> IDENTIFIER COLON statement','labeled_statement',3,'p_labeled_statement','parser.py',456),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement','parser.py',457),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement','parser.py',458),
  ('compound_statement -> LEFT_CURLY_BRACKET RIGHT_CURLY_BRACKET','compound_statement',2,'p_compound_statement','parser.py',465),
  ('compound_statement -> LEFT_CURLY_BRACKET block_item_list RIGHT_CURLY_BRACKET','compound_statement',3,'p_compound_statement','parser.py',466),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','parser.py',472),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','parser.py',473),
  ('block_item -> declaration','block_item',1,'p_block_item','parser.py',479),
  ('block_item -> statement','block_item',1,'p_block_item','parser.py',480),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',504),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',505),
  ('expression_statement -> SEMICOLON','expression_statement',1,'p_expression_statement','parser.py',511),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','parser.py',512),
  ('selection_statement -> IF LEFT_BRACKET expression RIGHT_BRACKET compound_statement','selection_statement',5,'p_selection_statement','parser.py',518),
  ('selection_statement -> IF LEFT_BRACKET expression RIGHT_BRACKET compound_statement ELSE compound_statement','selection_statement',7,'p_selection_statement','parser.py',519),
  ('selection_statement -> SWITCH LEFT_BRACKET expression RIGHT_BRACKET compound_statement','selection_statement',5,'p_selection_statement','parser.py',520),
  ('iteration_statement -> WHILE LEFT_BRACKET expression RIGHT_BRACKET compound_statement','iteration_statement',5,'p_iteration_statement','parser.py',526),
  ('iteration_statement -> DO compound_statement WHILE LEFT_BRACKET expression RIGHT_BRACKET SEMICOLON','iteration_statement',7,'p_iteration_statement','parser.py',527),
  ('iteration_statement -> FOR LEFT_BRACKET expression_statement expression_statement RIGHT_BRACKET compound_statement','iteration_statement',6,'p_iteration_statement','parser.py',528),
  ('iteration_statement -> FOR LEFT_BRACKET expression_statement expression_statement expression RIGHT_BRACKET compound_statement','iteration_statement',7,'p_iteration_statement','parser.py',529),
  ('jump_statement -> GOTO IDENTIFIER SEMICOLON','jump_statement',3,'p_jump_statement','parser.py',535),
  ('jump_statement -> CONTINUE SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',536),
  ('jump_statement -> BREAK SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',537),
  ('jump_statement -> RETURN SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',538),
  ('jump_statement -> RETURN expression SEMICOLON','jump_statement',3,'p_jump_statement','parser.py',539),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit','parser.py',545),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit','parser.py',546),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration','parser.py',552),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration','parser.py',553),
  ('function_definition -> declaration_specifiers declarator declaration_list compound_statement','function_definition',4,'p_function_definition','parser.py',559),
  ('function_definition -> declaration_specifiers declarator compound_statement','function_definition',3,'p_function_definition','parser.py',560),
  ('function_definition -> declarator declaration_list compound_statement','function_definition',3,'p_function_definition','parser.py',561),
  ('function_definition -> declarator compound_statement','function_definition',2,'p_function_definition','parser.py',562),
  ('inheritance_specifier -> access_specifier IDENTIFIER','inheritance_specifier',2,'p_inheritance_specifier','parser.py',568),
  ('inheritance_specifier_list -> inheritance_specifier','inheritance_specifier_list',1,'p_inheritance_specifier_list','parser.py',573),
  ('inheritance_specifier_list -> inheritance_specifier_list COMMA inheritance_specifier','inheritance_specifier_list',3,'p_inheritance_specifier_list','parser.py',574),
  ('access_specifier -> PRIVATE','access_specifier',1,'p_access_specifier','parser.py',579),
  ('access_specifier -> PUBLIC','access_specifier',1,'p_access_specifier','parser.py',580),
  ('access_specifier -> PROTECTED','access_specifier',1,'p_access_specifier','parser.py',581),
  ('class_definition_head -> CLASS','class_definition_head',1,'p_class_definition_head','parser.py',586),
  ('class_definition_head -> CLASS INHERITANCE_OP inheritance_specifier_list','class_definition_head',3,'p_class_definition_head','parser.py',587),
  ('class_definition_head -> CLASS IDENTIFIER','class_definition_head',2,'p_class_definition_head','parser.py',588),
  ('class_definition_head -> CLASS IDENTIFIER INHERITANCE_OP inheritance_specifier_list','class_definition_head',4,'p_class_definition_head','parser.py',589),
  ('class_definition -> class_definition_head LEFT_CURLY_BRACKET class_internal_definition_list RIGHT_CURLY_BRACKET','class_definition',4,'p_class_definition','parser.py',594),
  ('class_definition -> class_definition_head','class_definition',1,'p_class_definition','parser.py',595),
  ('class_internal_definition_list -> class_internal_definition','class_internal_definition_list',1,'p_class_internal_definition_list','parser.py',600),
  ('class_internal_definition_list -> class_internal_definition_list class_internal_definition','class_internal_definition_list',2,'p_class_internal_definition_list','parser.py',601),
  ('class_internal_definition -> access_specifier LEFT_CURLY_BRACKET class_member_list RIGHT_CURLY_BRACKET SEMICOLON','class_internal_definition',5,'p_class_internal_definition','parser.py',606),
  ('class_member_list -> class_member','class_member_list',1,'p_class_member_list','parser.py',611),
  ('class_member_list -> class_member_list class_member','class_member_list',2,'p_class_member_list','parser.py',612),
  ('class_member -> function_definition','class_member',1,'p_class_member','parser.py',617),
  ('class_member -> declaration','class_member',1,'p_class_member','parser.py',618),
]
